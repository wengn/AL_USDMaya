#usda 1.0
(
    defaultPrim = "pCube2"
    endTimeCode = 24
    startTimeCode = 1
    upAxis = "Y"
)

def Xform "pCube1" (
    kind = "component"
)
{
    double3 xformOp:translate.timeSamples = {
        1: (0, 2, 0),
        2: (0, 2, -0.11013396893235801),
        3: (0, 2, -0.42738555108079235),
        4: (0, 2, -0.9320292594723432),
        5: (0, 2, -1.6043396071340514),
        6: (0, 2, -2.4245911070929567),
        7: (0, 2, -3.3730582723760993),
        8: (0, 2, -4.430015616010519),
        9: (0, 2, -5.575737651023259),
        10: (0, 2, -6.7904988904413575),
        11: (0, 2, -8.054573847291854),
        12: (0, 2, -9.348237034601791),
        13: (0, 2, -10.651762965398206),
        14: (0, 2, -11.945426152708148),
        15: (0, 2, -13.209501109558644),
        16: (0, 2, -14.42426234897674),
        17: (0, 2, -15.569984383989482),
        18: (0, 2, -16.6269417276239),
        19: (0, 2, -17.575408892907042),
        20: (0, 2, -18.395660392865953),
        21: (0, 2, -19.067970740527656),
        22: (0, 2, -19.57261444891921),
        23: (0, 2, -19.88986603106764),
        24: (0, 2, -20),
    }
    uniform token[] xformOpOrder = ["xformOp:translate"]

    def Mesh "pCubeShape2"
    {
        uniform bool doubleSided = 1
        float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
        int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0)] (
            interpolation = "faceVarying"
        )
        point3f[] points = [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5)]
        uniform token subdivisionScheme = "none"
    }
}

